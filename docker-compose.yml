version: "3.8"
services:
  postgresql:
    container_name: postgresql
    env_file: ./env/postgresql.env
    image: postgres:12.5-alpine
    hostname: postgresql
    ports:
      - 5432:5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    networks:
      online-store:
        ipv4_address: 192.168.0.21

  config-service:
    container_name: config-service
    env_file:
      - ./env/postgresql.env
      - ./env/config-service.env
    build:
      context: .
      dockerfile: ./config-service/Dockerfile
    image: config-service:latest
    hostname: config-service
    ports:
      - 8081:8081
    networks:
      online-store:
        ipv4_address: 192.168.0.2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 50s
      timeout: 10s
      retries: 3
      start_period: 40s

  registry-service:
    container_name: registry-service
    env_file:
      - ./env/registry-service.env
      - ./env/config-service.env
    build:
      context: .
      dockerfile: ./registry-service/Dockerfile
    image: registry-service:latest
    hostname: registry-service
    ports:
      - 8082:8082
    networks:
      online-store:
        ipv4_address: 192.168.0.3

  auth-service:
    env_file:
      - ./env/postgresql.env
      - ./env/auth-service.env
      - ./env/config-service.env
      - ./env/registry-service.env
    environment:
      - AUTH_PROFILE
    container_name: auth-service
    build:
        context: .
        dockerfile: ./auth-service/Dockerfile
    image: auth-service:latest
    hostname: auth-service
    ports:
      - 8090:8090
    networks:
      online-store:
        ipv4_address: 192.168.0.11

  product-service:
    env_file:
      - ./env/postgresql.env
      - ./env/product-service.env
      - ./env/config-service.env
      - ./env/registry-service.env
    environment:
      - PRODUCT_PROFILE
    container_name: product-service
    build:
        context: .
        dockerfile: ./product-service/Dockerfile
    image: product-service:latest
    hostname: product-service
    ports:
      - 8091:8091
    networks:
      online-store:
        ipv4_address: 192.168.0.12

  shopping-service:
    env_file:
      - ./env/postgresql.env
      - ./env/shopping-service.env
      - ./env/config-service.env
      - ./env/registry-service.env
    environment:
      - SHOPPING_PROFILE
    container_name: shopping-service
    build:
        context: .
        dockerfile: ./shopping-service/Dockerfile
    image: shopping-service:latest
    hostname: shopping-service
    ports:
      - 8092:8092
    networks:
      online-store:
        ipv4_address: 192.168.0.13

networks:
  online-store:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.0.0/24"
